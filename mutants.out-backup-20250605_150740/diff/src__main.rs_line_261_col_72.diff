--- src/main.rs
+++ replace += with -= in count_events_by_type
@@ -253,17 +253,17 @@
     })
 }
 
 // Count events by type for display
 fn count_events_by_type(events: &[ZwiftEvent]) -> Vec<(String, usize)> {
     let mut event_counts = std::collections::HashMap::new();
     for event in events {
         if event.sport.to_uppercase() == "CYCLING" {
-            *event_counts.entry(event.event_type.clone()).or_insert(0) += 1;
+            *event_counts.entry(event.event_type.clone()).or_insert(0) -= /* ~ changed by cargo-mutants ~ */ 1;
         }
     }
     
     let mut counts: Vec<_> = event_counts.into_iter().collect();
     counts.sort_by_key(|(_, count)| std::cmp::Reverse(*count));
     counts
 }
 
