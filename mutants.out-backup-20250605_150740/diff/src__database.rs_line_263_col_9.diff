--- src/database.rs
+++ replace Database::add_route -> Result<()> with Ok(())
@@ -255,39 +255,17 @@
         }).optional()?;
         
         Ok(route)
     }
     
     /// Add a new route to the database
     #[allow(dead_code)]
     pub fn add_route(&self, route: &RouteData) -> Result<()> {
-        self.conn.execute(
-            "INSERT OR REPLACE INTO routes (route_id, distance_km, elevation_m, name, world, surface,
-                                           lead_in_distance_km, lead_in_elevation_m,
-                                           lead_in_distance_free_ride_km, lead_in_elevation_free_ride_m,
-                                           lead_in_distance_meetups_km, lead_in_elevation_meetups_m, slug) 
-             VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13)",
-            params![
-                route.route_id,
-                route.distance_km,
-                route.elevation_m,
-                route.name,
-                route.world,
-                route.surface,
-                route.lead_in_distance_km,
-                route.lead_in_elevation_m,
-                route.lead_in_distance_free_ride_km,
-                route.lead_in_elevation_free_ride_m,
-                route.lead_in_distance_meetups_km,
-                route.lead_in_elevation_meetups_m,
-                route.slug
-            ],
-        )?;
-        Ok(())
+        Ok(()) /* ~ changed by cargo-mutants ~ */
     }
     
     /// Get route data by name
     #[allow(dead_code)]
     pub fn get_route_by_name(&self, name: &str) -> Result<Option<RouteData>> {
         let mut stmt = self.conn.prepare(
             "SELECT route_id, distance_km, elevation_m, name, world, surface,
                     lead_in_distance_km, lead_in_elevation_m,
