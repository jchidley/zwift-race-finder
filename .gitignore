# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore for binary crates
# It's recommended to include Cargo.lock in version control for binary crates
# Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS files
.DS_Store
Thumbs.db

# Project specific
zwiftpower_results.json
*.db
*.db-journal
*.db-wal
import.sql
/.local/
config.json
config.toml
zwiftpower_page_structure.json

# Secure config files (but keep the setup scripts)
personal_config.json.gpg
decrypt_config.sh
restore_personal_config.sh
zwift-race-finder-secure
zwift-race-finder-personal
# zwift-race-finder-bw  # Now safe to commit (uses Bitwarden, no hardcoded secrets)
# bw_config.sh  # Now safe to commit (uses Bitwarden, no hardcoded secrets)
bitwarden_item_template.json

# Keep example files
!config.example.toml
!config.example.json

# Documentation with personal details (sanitize before committing)
GITHUB_PUBLISH_LOG.md

# Temporary files
*.tmp
*.bak
*.log

# Environment files (may contain API keys)
.env
.env.local

# Strava config with OAuth tokens
strava_config.json

# Test coverage
tarpaulin-report.html
cobertura.xml
coverage/

# Mutation testing output
mutants.out/
mutants.out.old/
mutation_results/
cargo-mutants/

# Profiling
perf.data
perf.data.old
flamegraph.svg
*.profdata

# Reference repositories
zwiftmap-reference/
zwift-data-reference/
zwift-client-reference/

# Python cache
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
*.so
